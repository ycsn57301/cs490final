#define size 100
#define size2 10000

plocal1 plc int[size] recv_path() {
    // plc int[size] path = {0,1,3,2};
    plc int[size] path = {51,9,73,39,20,50,28,67,27,97,33,44,64,2,10,29,62,36,76,71,59,19,32,61,22,54,75,78,48,99,83,96,58,94,45,13,30,55,72,0,49,38,24,80,47,85,3,95,79,46,65,82,26,8,66,77,81,11,1,88,90,35,63,87,69,84,43,60,41,34,6,86,89,74,25,18,56,31,23,14,91,53,21,70,37,5,15,42,68,92,98,7,16,52,57,4,17,12,40,93};
    return path;
}

unit init() {
    // when size is 4:
    // assertion should succeed
    // graph = {
    //     false, true, true, true,
    //     true, false, true, false,
    //     true, true, false, true,
    //     true, false, true, false};
    // path = {0,1,2,3};

    // when size is 4:
    // assertion should fail
    // graph = {
    //     false, true, true, true,
    //     true, false, true, false,
    //     true, true, false, true,
    //     true, false, true, false};
    // path = {0,1,3,2};

    // when size is 4:
    // assertion should succeed
    // graph = {
    //     false, true, true, true,
    //     true, false, true, true,
    //     true, true, false, true,
    //     true, true, true, false};
    // path = {0,1,3,2};

    // when size is 10:
    // assertion should succeed
//     graph = {false, true, true, false, false, false, true, false, false, false,
// false, false, false, false, false, false, true, false, true, true,
// true, false, true, false, true, true, false, false, true, false,
// false, false, false, false, true, true, false, true, false, false,
// false, false, true, true, false, false, true, false, true, false,
// true, false, true, false, false, false, false, false, true, false,
// true, true, true, false, false, true, false, false, true, false,
// false, false, false, true, false, false, false, false, false, true,
// false, false, false, true, true, true, false, false, false, false,
// true, true, false, true, false, true, false, true, true, true};
//     path = {9,7,3,4,8,5,2,0,6,1};
    return;
}