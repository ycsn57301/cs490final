plocal plc int gcd(plc int a, plc int b) {
    if (b == 0) {
        return a;
    }
    else {
        return gcd(b, a % b);
    }
}

struct gcd_proof {
    plc int proof_x;
    plc int proof_y;
}

/* Find x and y such that ax + by = c */
plocal struct gcd_proof find_gcd_proof(plc int a, plc int b, plc int c) {
    plc int x = 0;
    while ((c - a * x) % b != 0) {
        x = x + 1;
    }
    return {.proof_x = x, .proof_y = (c - a * x) / b};
}

pvt int input_a = 0;
pvt int input_b = 0;

unit main() {
    plc int a = reveal(input_a);
    plc int b = reveal(input_b);
    plc int c = gcd(a, b);
    struct gcd_proof proof = find_gcd_proof(a, b, c);
    
    pvt int output_c = commit(c);
    pvt x = commit(proof.proof_x);
    pvt y = commit(proof.proof_y);
    assert (input_a * x + input_b * y == output_c);
    return;
}